
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">×</button>
                <h4 class="modal-title" id="myModalLabel">Add Contact</h4>
            </div>
            <div class="modal-body">
                <p>* cannot be left empty</p>
                <form>
                    <div class="form-group">
                        <label for="Name">Name *</label>
                        <input type="text" class="form-control" id="Name" placeholder="Name" />
                    </div>
                    <div class="form-group">
                        <label for="Email">Email *</label>
                        <input type="email" class="form-control" id="Email" placeholder="Email Address" />
                    </div>
                    <div class="form-group">
                        <label for="Address">Address</label>
                        <input type="text" class="form-control" id="Address" placeholder="Address" />
                    </div>

                    <div class="form-group">
                        <button class="btn btn-info" type="button" id="addPhone">Add Phone Number</button>
                    </div>

                    <div id="phoneNumbersContainer">

                    </div>

                </form>
            </div>
            <div class="modal-footer" id="UpdateButton">
                <button type="button" class="btn btn-primary" id="btnContactAdd" onclick="return addContact();">Add</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<script>
    //This fanction is called every time a user attempts to edit or delete a contact. It provides all the validations necessary in order for data to be valid before sent to the controller.
    //Moreover, it checks if selected email already exists(email MUST be unique), by sending the necessary data to the assigned controller method(notice that this particular ajax callback is the only one that is not 
    //asynchronous, because obviously the newly created data cannot be sent to the controller before all validation procedures are completed.). Rest of the page's javascript code may be found inside the "main.js" 
    //file in scripts folder.

    function validateContact(Id = 0) {
        var isValid = true;

        var name = $('#Name').val();
        var email = $('#Email').val().trim();
        var address = $('#Address').val();

        if (name.trim() == "" || /^[a-zA-Z ]+$/.test(name) == false || name.length > 100 || name.length < 2) {
            $('#Name').css('border-color', 'Red');
            isValid = false;
        }
        else {
            $('#Name').css('border-color', 'lightgrey');
        }

        if ((address.length > 0 && address.length < 2) || address.length > 100) {
            $('#Address').css('border-color', 'Red');
            isValid = false;
        }
        else {
            $('#Address').css('border-color', 'lightgrey');
        }

        if (email.trim() == "" || (/^\w+([\.-]?\w+)*@@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(email) == false)) {
            $('#Email').css('border-color', 'Red');
            var x = /^\w+([\.-]?\w+)*@@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(email);
            console.log(x);
            isValid = false;
        }
        else {
            $.ajax({
                url: "/Home/EmailCheck",
                data: JSON.stringify({ email: email, Id: Id }),
                type: "POST",
                async: false,
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {

                    if (result == true) {
                        $('#Email').css('border-color', 'Red');
                        alert('Email already exists.')
                        isValid = false;
                    } else {
                        $('#Email').css('border-color', 'lightgrey');
                    }
                }
            });
        }

        $.each($(".phoneNumberText"), function (key, item) {
            if (isNaN(item.value) || (item.value.length > 0 && item.value.length < 10) || item.value.length > 30) {
                alert('Phone number fields may only contain letters. Must be at least 10 numbers long.')
                isValid = false;
                return false;
            }
        });

        return isValid;
    }
</script>
